C51 COMPILER V8.12   MAIN                                                                  05/13/2017 14:13:16 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN Main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Main.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <AT89C5131.h>
   2          #include <stdio.h>
   3          #include <string.h>
   4          
   5          sbit LCD_RS = P2^0;
   6          sbit LCD_EN = P2^1;
   7          sbit keypad_EN=P2^2;
   8          char Phone_num[10];
   9          char key_code[]={0xD,0x00,0x1,0x2,0x4,0x5,0x6,0x8,0x9,0xA,0x3,0x7,0xB,0xF,0xE};
  10          unsigned char key_table[]="0123456789ABCD#";
  11          
  12          bit SendSMS=0;
  13          unsigned char k=0;
  14          unsigned char cnt=0;
  15          char key;
  16          
  17          sbit Seg1= P1^0;
  18          sbit Seg2= P1^1;
  19          sbit Seg3= P1^2;
  20          
  21          sbit D0= P1^3;
  22          sbit D1= P1^4;
  23          sbit D2= P1^5;
  24          sbit D3= P1^6;
  25          
  26          sbit Buzzer= P1^7;
  27          sbit Station1 = P2^3;
  28          sbit LedStation1 = P2^4;
  29          sbit LedStation2 = P2^5;
  30          
  31          unsigned char num1=0,num2=0;//7 seg disply number of line (2 digits)
  32          unsigned char numcnt=0;//7 seg number counter
  33          unsigned char NumStation=0;//7 seg disply number free station
  34          unsigned char n=1;//7 seg disply counter jumper
  35          unsigned char Line[2]={'0','1'};
  36          unsigned char linecnt=0;//line number counter
  37            
  38          unsigned long time=0;
  39          unsigned int time1=0;
  40          unsigned int amount=1;
  41          unsigned int avg=20;//Avg per queue
  42          unsigned int avgt=0;//Avg per user
  43          
  44          unsigned char avgasc[3]={'0','2','0'};
  45          unsigned char avgtotal[3]={'0','2','0'};
  46          
  47          
  48          void Delay(int msec)//delay
  49          {
  50   1              int i,j; 
  51   1              for(j=0;j<msec;j++) 
  52   1              for(i=0;i<200;i++);
  53   1      }
  54          
  55          
C51 COMPILER V8.12   MAIN                                                                  05/13/2017 14:13:16 PAGE 2   

  56          void LCD_Write(char command,char cnt) //write display
  57          {
  58   1      if(cnt == 'c') LCD_RS=0;      // What we want to disply on LCD
  59   1      else if(cnt == 'd')  LCD_RS=1;//cnt = For Command (=c) or data (=d)
  60   1              
  61   1      LCD_EN = 1;
  62   1      Delay(5);
  63   1      P0=command;
  64   1      LCD_EN = 0;
  65   1      Delay(10);
  66   1      }
  67            
  68          void ClrScr_CursorFirst()//clear Screen && Cursot to (0,0)
  69          {
  70   1               LCD_Write(0x01,'c');
  71   1               LCD_Write(0x02,'c');
  72   1      }
  73          
  74          void NewLine() //new line Cursor go to line 2
  75          {
  76   1               LCD_Write(0xc0,'c');
  77   1      }
  78          
  79          void SendWord(char Letters[])//send the String
  80          {
  81   1              int i=0;
  82   1              while(Letters[i]!='\0') 
  83   1              {
  84   2              LCD_Write(Letters[i],'d');
  85   2              i++;
  86   2              }
  87   1      }
  88          
  89          char CODE_TO_ASCII(unsigned char key)
  90          {
  91   1              int i;
  92   1              for(i=0;i<15;i++)
  93   1              {
  94   2                      if(key_code[i]==key)
  95   2                              return(key_table[i]);
  96   2              }
  97   1              return '*';
  98   1      }
  99          
 100          
 101                  void keypad_enable(int x)
 102                  {
 103   1              keypad_EN=x;
 104   1              }
 105                  
 106                  void setup_KP()
 107                  {
 108   1              keypad_EN=1;    
 109   1              IT0=1;   
 110   1              }
 111          
 112                     void number(int i)
 113          {
 114   1      D0=i&0x01;
 115   1        i=i >> 1;
 116   1      
 117   1      D1=i&0x01;
C51 COMPILER V8.12   MAIN                                                                  05/13/2017 14:13:16 PAGE 3   

 118   1        i=i >> 1;
 119   1      
 120   1      D2=i&0x01;
 121   1        i=i >> 1;
 122   1      
 123   1      D3=i&0x01; 
 124   1      }
 125          
 126          void digit(int i)
 127          {
 128   1       if (i==1)
 129   1              {
 130   2        Seg1= 1;
 131   2        Seg2= 0;
 132   2        Seg3= 0;
 133   2              }
 134   1              else if (i==2)
 135   1              {
 136   2        Seg1= 0;
 137   2        Seg2= 1;
 138   2        Seg3= 0;
 139   2              }
 140   1              else if (i==3)
 141   1              {
 142   2        Seg1= 0;
 143   2        Seg2= 0;
 144   2        Seg3= 1;
 145   2              }
 146   1              else if (i==0)
 147   1              {
 148   2        Seg1= 0;
 149   2        Seg2= 0;
 150   2        Seg3= 0;
 151   2        }     
 152   1      }
 153          void setup_Seg()
 154          {
 155   1       digit(0);
 156   1       Buzzer=0;      
 157   1       IT1=1; 
 158   1      
 159   1      TMOD=0x01;// timer 0 mode 1                                                                                                                     
 160   1      TL0=-2000&0xff;// timer 0  -  1 msec interrupt
 161   1      TH0=-2000>>8;
 162   1      TR0=1; // enable timer 0 , int  1       
 163   1      }
 164          
 165          void setup_LCD()//Display Options
 166          {
 167   1      LCD_EN =1;
 168   1      LCD_Write(0x06,'c');//cursor movement
 169   1      LCD_Write(0x0c,'c');//Appearance
 170   1      LCD_Write(0x38,'c');//Cursor display
 171   1      }
 172          
 173          void setup_GSM()
 174          {
 175   1      CKCON0+=0x01;//increase BDR
 176   1      SCON=0x50;// UART MODE 1 (8BIT REGISTER), ENABLE RECIEVE
 177   1      PCON+=0x80;//Increase BDR
 178   1      BDRCON+=0x1E;//Incrase BDR, Run INT_BDG, Set Int_BRG to be the UARTS Timer
 179   1      BRL=177;//SET BAUD_RATE TO 19200
C51 COMPILER V8.12   MAIN                                                                  05/13/2017 14:13:16 PAGE 4   

 180   1      }
 181          
 182                  
 183          void Avg_Total()
 184            {
 185   1        avgt=(linecnt-numcnt+1)*avg;
 186   1      
 187   1        avgtotal[2]=(((avgt%100))%10)+0x30;// unity 
 188   1        avgtotal[1]=(((avgt%100))/10)+0x30;// Dozen
 189   1        avgtotal[0]=(avgt/100)+0x30;// Hundred
 190   1        }
 191          
 192          void serialprint(char a[])                  
 193          {
 194   1        int i=0;
 195   1              while ( a[i]!='\0')                      
 196   1              {
 197   2              SBUF = a[i];                              
 198   2              while(TI==0);                            
 199   2                      TI=0;                                  
 200   2                      i++; 
 201   2              }
 202   1      }
 203          
 204          void serialprint2(char arr[],int x)                  
 205          {          
 206   1      int i;
 207   1      
 208   1      if(arr[0]=='0')
 209   1      {
 210   2       i=1;
 211   2        if(arr[1]=='0') i=2;
 212   2       }
 213   1      else i=0;
 214   1      
 215   1      for(;i<=x-1;i++)
 216   1      {
 217   2              SBUF = arr[i];                              
 218   2              while(TI==0);                             
 219   2              TI=0;   
 220   2      }                                                                    
 221   1      }
 222                     
 223          void newline_GSM()// Function that sends Carriage return and Newline
 224          {
 225   1                      SBUF = 0x0D;
 226   1                while(TI==0);//0x0A -> NEWLINE, 0x0D - CARRIAGE RETURN 
 227   1                      TI=0;
 228   1                      SBUF = 0x0A;
 229   1                while(TI==0);//0x0A -> NEWLINE, 0x0D - CARRIAGE RETURN 
 230   1                      TI=0;   
 231   1      }
 232          
 233           void SMS_Send()
 234           {
 235   1      int flag = 1;
 236   1      IEN0=IEN0&0xfa;
 237   1      Delay(2000);//DELAY 2SEC
 238   1      serialprint("AT+CMGF=1");//print COMMAND
 239   1      newline_GSM();//send newline
 240   1      Delay(1500);//DELAY 1.5SEC
 241   1      serialprint("AT+CMGS=\"");
C51 COMPILER V8.12   MAIN                                                                  05/13/2017 14:13:16 PAGE 5   

 242   1      serialprint(Phone_num);                    
 243   1      serialprint("\"");//print COMMAND   
 244   1      newline_GSM();//send newline
 245   1      RI=0;//prepare for recieve
 246   1      
 247   1      while(flag)
 248   1       {
 249   2              while(RI==0);//freeze until data recieved
 250   2              RI=0;//revert recieve
 251   2              while(SBUF == '>')//check if recieved approval
 252   2               {                                
 253   3               Delay(500);                       
 254   3               serialprint("Your Number is: ");//send message
 255   3               serialprint2(Line,2); 
 256   3               newline_GSM();
 257   3               serialprint("Avg time for a Queue: ");
 258   3              serialprint2(avgasc,3); 
 259   3              serialprint(" Sec ");
 260   3              newline_GSM();
 261   3              Avg_Total();
 262   3              serialprint("Avg time to wait: ");
 263   3              serialprint2(avgtotal,3); 
 264   3              serialprint(" Sec ");
 265   3              
 266   3              flag = 0;
 267   3               Delay(500);//DELAY 0.5SEC
 268   3               SBUF = 0x1A;//subtitute (END MESSAGE)
 269   3               while(TI==0); 
 270   3               TI=0;
 271   3         newline_GSM();//newline
 272   3               Delay(5000);//DELAY 5SEC
 273   3         
 274   3       }
 275   2      }         
 276   1      
 277   1      IEN0=IEN0|0x85;
 278   1      }
 279           void LineForword()
 280           {
 281   1              Line[1]++;
 282   1              linecnt++;
 283   1              if(     Line[1]=='9'+1) 
 284   1              {
 285   2                      Line[1]='0';
 286   2                      Line[0]++;
 287   2              
 288   2                      if(Line[0]=='9'+1)
 289   2                       {
 290   3                       Line[0]=1;
 291   3                         Line[1]=0;
 292   3                         linecnt=0;
 293   3                       }
 294   2      
 295   2              }
 296   1       }
 297          
 298           void ReciveNum()
 299                  {
 300   1              Phone_num[cnt]=key;
 301   1              LCD_Write(Phone_num[cnt],'d');
 302   1              cnt++;
 303   1              Delay(10);
C51 COMPILER V8.12   MAIN                                                                  05/13/2017 14:13:16 PAGE 6   

 304   1              k++;
 305   1              }
 306          
 307          void Delete()
 308          {
 309   1          char back;
 310   1              cnt--;
 311   1              k-=1;
 312   1              back=0xc0;
 313   1              back += (cnt);
 314   1              LCD_Write(back,'c');
 315   1              LCD_Write(0x20,'d');//20H = space
 316   1              LCD_Write(back,'c');
 317   1      }
 318          
 319          void Reset_PhoneNum()
 320          {
 321   1      int i;
 322   1      for(i=0;i<=9;i++) 
 323   1      Phone_num[i]=0;
 324   1      }
 325           
 326          void avg_con2_ascii()
 327            {
 328   1        time1=(time/1000)/1.8;// divide by 1.8 = Standard deviation
 329   1        time=0;
 330   1        avg=avg*amount;
 331   1        avg+=time1;
 332   1        amount++;
 333   1        avg=avg/amount;
 334   1      
 335   1        avgasc[2]=(((avg%100))%10)+0x30;// unity 
 336   1        avgasc[1]=(((avg%100))/10)+0x30;// Dozen
 337   1        avgasc[0]=(avg/100)+0x30;     //Hundred
 338   1        }
 339          
 340          void PressTrue() interrupt 0
 341          {
 342   1          Delay(10);
 343   1              P0=0xff;        
 344   1              keypad_enable(0); 
 345   1              Delay(5);       
 346   1              key=P0;   
 347   1              keypad_enable(1);
 348   1              key=key&0x0f; 
 349   1              key=CODE_TO_ASCII(key);  
 350   1              
 351   1              if(key != 'B' && key != 'A')  ReciveNum();
 352   1              else if (key == 'B') Delete();
 353   1      
 354   1              else if (key == 'A' && k==10)
 355   1              {
 356   2              SendSMS=1;
 357   2              k=0;
 358   2              cnt=0;
 359   2               } 
 360   1              }
 361                  
 362          void Timer0() interrupt 1 // timer 0
 363          {  
 364   1      TR0=0;
 365   1      TL0=-2000&0xff; // timer 0  -  1 msec interrupt
C51 COMPILER V8.12   MAIN                                                                  05/13/2017 14:13:16 PAGE 7   

 366   1      TH0=-2000>>8;
 367   1      TR0=1;
 368   1      
 369   1      switch (n) 
 370   1      {
 371   2          case 1:
 372   2              digit(1);
 373   2              number(num1);  
 374   2              break;
 375   2      
 376   2          case 2:
 377   2              digit(2);
 378   2              number(num2);     
 379   2                      break;
 380   2      
 381   2          case 3:
 382   2              digit(3);
 383   2              number(NumStation);       
 384   2                      break;
 385   2      
 386   2      
 387   2      }
 388   1      n++;  // next segment
 389   1      if (n==4) n=1;
 390   1      time++;
 391   1      }
 392          
 393          
 394            void station() interrupt 2    //int 1
 395          {
 396   1        if( numcnt <= linecnt )
 397   1        {
 398   2         digit(0);
 399   2         Buzzer=1;
 400   2        Delay(50);
 401   2        if(Station1==0x00) 
 402   2        {
 403   3        NumStation=2;
 404   3        LedStation2 = 0;
 405   3        Delay(3000);
 406   3        LedStation2 = 1;
 407   3        }
 408   2        else if(Station1==0x01)
 409   2        {  
 410   3        NumStation=1;
 411   3        LedStation1 = 0;
 412   3        Delay(3000);
 413   3        LedStation1 = 1;
 414   3        }
 415   2      
 416   2        num2++;
 417   2        numcnt++;
 418   2        if(num2>9)
 419   2        {
 420   3              num2=0;
 421   3              num1++;
 422   3      
 423   3              if(num1>9) 
 424   3              {
 425   4              num1=0;
 426   4              numcnt=0;
 427   4              }
C51 COMPILER V8.12   MAIN                                                                  05/13/2017 14:13:16 PAGE 8   

 428   3        }
 429   2         Buzzer=0;
 430   2         avg_con2_ascii();
 431   2        }      
 432   1        TCON=TCON&0xF7; 
 433   1      }
 434          
 435          void Setup()
 436          {
 437   1              int i; 
 438   1              setup_GSM();
 439   1              setup_KP();
 440   1              setup_LCD();
 441   1              setup_Seg();
 442   1              Reset_PhoneNum();
 443   1              IEN0=0x87;
 444   1          ClrScr_CursorFirst();
 445   1          SendWord("Load System");
 446   1              Delay(2000);
 447   1              for(i=0;i<=2;i++)
 448   1              {
 449   2               SendWord(".");
 450   2               Delay(1000);
 451   2              }
 452   1              ClrScr_CursorFirst();
 453   1      }
 454          
 455          void main()
 456          {
 457   1              Setup();
 458   1              
 459   1              SendWord("Enter Number:");
 460   1              NewLine();
 461   1          keypad_enable(1);
 462   1              
 463   1              while(1)
 464   1              {
 465   2               if(SendSMS)//SendSMS=1 when enter phone number
 466   2               {
 467   3               SendSMS=0;
 468   3               ClrScr_CursorFirst();
 469   3               SendWord("Number Recived!!");
 470   3               Delay(1000);
 471   3               ClrScr_CursorFirst();
 472   3           Delay(1000); 
 473   3               SendWord("SMS Send To:");
 474   3               NewLine();
 475   3               SendWord(Phone_num);
 476   3           SMS_Send();//GSM SEND SMS line
 477   3      
 478   3               Reset_PhoneNum();
 479   3               LineForword();
 480   3      
 481   3               Delay(500);
 482   3           ClrScr_CursorFirst();
 483   3               SendWord("Enter Number:");
 484   3               NewLine();
 485   3               }
 486   2              }
 487   1      }


C51 COMPILER V8.12   MAIN                                                                  05/13/2017 14:13:16 PAGE 9   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1961    ----
   CONSTANT SIZE    =    145    ----
   XDATA SIZE       =     70      20
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
